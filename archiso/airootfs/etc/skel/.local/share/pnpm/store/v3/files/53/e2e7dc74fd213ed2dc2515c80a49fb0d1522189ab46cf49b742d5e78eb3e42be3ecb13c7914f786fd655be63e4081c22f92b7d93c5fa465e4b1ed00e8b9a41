/// <reference types="react" />
import { OptionType } from "../../utils/types";
declare function useForceServerHome(): boolean;
declare function useDisableViewServerHome(): void;
declare const _default: {
    name: string;
    description: string;
    authors: {
        name: string;
        id: bigint;
    }[];
    settings: import("../../utils/types").DefinedSettings<{
        forceServerHome: {
            type: OptionType.BOOLEAN;
            description: string;
            default: false;
        };
    }, import("../../utils/types").SettingsChecks<{
        forceServerHome: {
            type: OptionType.BOOLEAN;
            description: string;
            default: false;
        };
    }>, {}>;
    patches: ({
        find: string;
        all: true;
        replacement: {
            match: RegExp;
            replace: string;
        }[];
    } | {
        find: string;
        replacement: {
            match: RegExp;
            replace: string;
        }[];
        all?: undefined;
    } | {
        find: string;
        replacement: {
            match: RegExp;
            replace: string;
        };
        all?: undefined;
    } | {
        find: string;
        replacement: {
            match: RegExp;
            replace: (m: string) => string;
        };
        all?: undefined;
    })[];
    ViewServerHomeButton: import("react").FunctionComponent<{
        serverGuide?: boolean | undefined;
    }>;
    useForceServerHome: typeof useForceServerHome;
    useDisableViewServerHome: typeof useDisableViewServerHome;
    contextMenus: {
        "guild-context"(children: (import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | null)[], props: any): void;
    };
} & Record<string, any>;
export default _default;
