/// <reference types="react" />
import { MessageObject } from "../api/MessageEvents";
import { Guild, Message, User } from "discord-types/general";
import { ImageModal } from "./modal";
/**
 * Open the invite modal
 * @param code The invite code
 * @returns Whether the invite was accepted
 */
export declare function openInviteModal(code: string): Promise<boolean>;
export declare function getCurrentChannel(): import("discord-types/general").Channel;
export declare function getCurrentGuild(): Guild | undefined;
export declare function openPrivateChannel(userId: string): void;
export declare const enum Theme {
    Dark = 1,
    Light = 2
}
export declare function getTheme(): Theme;
export declare function insertTextIntoChatInputBox(text: string): void;
interface MessageExtra {
    messageReference: Message["messageReference"];
    allowedMentions: {
        parse: string[];
        replied_user: boolean;
    };
    stickerIds: string[];
}
export declare function sendMessage(channelId: string, data: Partial<MessageObject>, waitForChannelReady?: boolean, extra?: Partial<MessageExtra>): any;
export declare function openImageModal(url: string, props?: Partial<React.ComponentProps<ImageModal>>): string;
export declare function openUserProfile(id: string): Promise<void>;
interface FetchUserProfileOptions {
    friend_token?: string;
    connections_role_id?: string;
    guild_id?: string;
    with_mutual_guilds?: boolean;
    with_mutual_friends_count?: boolean;
}
/**
 * Fetch a user's profile
 */
export declare function fetchUserProfile(id: string, options?: FetchUserProfileOptions): Promise<any>;
/**
 * Get the unique username for a user. Returns user.username for pomelo people, user.tag otherwise
 */
export declare function getUniqueUsername(user: User): string;
export {};
