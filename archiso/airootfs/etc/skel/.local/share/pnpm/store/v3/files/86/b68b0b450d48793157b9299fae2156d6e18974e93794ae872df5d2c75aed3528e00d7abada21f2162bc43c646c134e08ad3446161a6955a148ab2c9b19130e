/// <reference types="react" />
import { OptionType } from "../../utils/types";
declare const _default: {
    name: string;
    authors: {
        name: string;
        id: bigint;
    }[];
    description: string;
    patches: {
        find: string;
        replacement: {
            match: RegExp;
            replace: string;
        }[];
        predicate: () => boolean;
    }[];
    settings: import("../../utils/types").DefinedSettings<{
        chatMentions: {
            type: OptionType.BOOLEAN;
            default: true;
            description: string;
            restartNeeded: true;
        };
        memberList: {
            type: OptionType.BOOLEAN;
            default: true;
            description: string;
            restartNeeded: true;
        };
        voiceUsers: {
            type: OptionType.BOOLEAN;
            default: true;
            description: string;
            restartNeeded: true;
        };
    }, import("../../utils/types").SettingsChecks<{
        chatMentions: {
            type: OptionType.BOOLEAN;
            default: true;
            description: string;
            restartNeeded: true;
        };
        memberList: {
            type: OptionType.BOOLEAN;
            default: true;
            description: string;
            restartNeeded: true;
        };
        voiceUsers: {
            type: OptionType.BOOLEAN;
            default: true;
            description: string;
            restartNeeded: true;
        };
    }>, {}>;
    getColor(userId: string, { channelId, guildId }: {
        channelId?: string;
        guildId?: string;
    }): string | null;
    getUserColor(userId: string, ids: {
        channelId?: string;
        guildId?: string;
    }): number | "" | null;
    roleGroupColor: import("react").FunctionComponent<{
        id: string;
        count: number;
        title: string;
        guildId: string;
        label: string;
    }>;
    getVoiceProps({ user: { id: userId }, guildId }: {
        user: {
            id: string;
        };
        guildId: string;
    }): {
        style: {
            color: string | null;
        };
    };
} & Record<string, any>;
export default _default;
